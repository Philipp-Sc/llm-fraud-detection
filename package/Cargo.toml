[package]
name = "rust-bert-fraud-detection"
authors = ["Philipp Schl√ºtermann <philipp.schluetermann@udo.edu>"]
description = "robust fraud detection using NLP topic extraction"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["rlib"]
# https://doc.rust-lang.org/cargo/reference/cargo-targets.html
name = "rust_bert_fraud_detection_tools"
path = "src/lib.rs"

[[bin]]
name = "rust_bert_fraud_detection"
path = "src/main.rs"


[dependencies]
importance = { git="https://github.com/philipp-sc/importance.git" }
linfa = { git="https://github.com/rust-ml/linfa.git", features = ["serde"] }
linfa-preprocessing = { git="https://github.com/rust-ml/linfa.git", features = ["serde"] }
linfa-reduction = { git="https://github.com/rust-ml/linfa.git" }
linfa-bayes = { git="https://github.com/rust-ml/linfa.git", features = ["serde"] }
ndarray = "0.15.6"
serde = {version = "1.0", features=["derive"]}
serde_json = "1.0"
anyhow = "1.0"
bincode = "1.3.3"
itertools = {version = "0.10.5"}
csv = {version = "1.1"}
rust-bert = {version = "0.21.0", features=["download-libtorch"]}
smartcore = {version = "0.2.1", features=["serde"]}
rand = {version = "0.8.5"}
regex = {version = "1.6.0"}
lazy_static = {version = "1.4.0"}
words-count = {version = "0.1.3"}
rust-bert-fraud-detection-socket-ipc = {path = "../socket_ipc" }
sled = { version = "0.34.7" }
tch = {version ="0.13.0", features=["download-libtorch"]}
linkify = "0.10.0"

[profile.release]
# Enable link-time optimization, eliminates more code and inlines across crate boundaries.
# Default: false
lto = true

# codegen-units of 1 gives best optimization, but disables parallel building.
# Default: 16
codegen-units = 1

# The default optimization level is 3 for release mode builds.
# 0 means disable optimization and is the default for debug mode buids.
# (Setting opt-level=1 for debug builds is a good way of speeding them up a bit.)
# "s" means optimize for size, "z" reduces size even more.
opt-level = 3

